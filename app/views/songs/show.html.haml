- title @artist.name + ' - ' + @song.name
- if @album.cover?
  - set_meta_tags :og => {:title => (@artist.name + " - " + @song.name) , :url => artist_album_song_url(@artist,@album,@song), :image => image_url(@album.cover), :description => @song.review}
- else
  - set_meta_tags :og => {:title => (@artist.name + " - " + @song.name) , :url => artist_album_song_url(@artist,@album,@song), :description => @song.review}
- set_meta_tags description: (@song.review || @song.name)
- set_meta_tags keywords: %W[radioperu.pe radio peru radioperu musica peruana #{@song.name}]

= render partial: 'artists/artists_header'

.row
  .col-md-1
  .col-md-10
    .pull-right
      - if policy(@song).edit?
        =link_to t(:edit_song), edit_artist_album_song_path(@artist,@album,@song), class: 'btn btn-warning'
      - if policy(@song).destroy?   
        =link_to t(:delete_song), [@artist,@album,@song], method: :delete, class: 'btn btn-danger', data: { confirm: t(:delete_song_confirm) }
      - if (current_user && current_user.admin?)
        =link_to 'clic-derecho,grabar-enlace', "/uploads/song/#{@artist.name}/#{@album.name}/#{@song.filename.file.basename}.mp3" , class: 'btn btn-info'
    
.row
  .col-md-1
  .col-md-10
    .pull-left
      %h3.catalogue_title
        %span.catalogue_title
          = link_to @artist.name, "/#{I18n.locale.to_s}/" + @artist.slug
        %span
          =  ' - '
        %span.catalogue_title
          = link_to @album.name, "/#{I18n.locale.to_s}/" + @artist.slug + '/albums/' + @album.slug
        %span
          = ' - ' + @song.name
    .sharepage.pull-right
      %h5
        = t(:share_this_song)
      .pull-right
        = social_share_button_tag((@artist.name + " - " + @song.name + " " + t(:in_radioperu)), popup: "true", via: "radioperu_pe")
  .col-md-1

.row
  .col-md-1
  .col-md-6
    %div{"oncontextmenu"=>"return false"}
      %ul.playlist.song-playlist
        %h4
          =t(:click_to_play)
          -if current_user && current_user.playlists.count > 0
            = " / " 
            %span.glyphicon.glyphicon-plus-sign
            = t(:add_to_playlist)
            = " / " 
            %span.glyphicon.glyphicon-minus-sign
            = t(:remove_from_playlist)          
        %li{id: "li"}
          -if current_user && current_user.playlists.count > 0
            -if @song.in?(current_user.playlists.first.songs)
              .playlist_add
                = link_to "", "javascript:;", class: "add_to_playlist btn btn-sm btn-danger glyphicon glyphicon-minus-sign clicked", id: @song.id  
            -else
              .playlist_add
                = link_to "", "javascript:;", class: "add_to_playlist btn btn-sm btn-success glyphicon glyphicon-plus-sign", id: @song.id  
          - else
            %a.hide
          %a.hide
          - offset = ENV["SOUND_OFFSET"].to_i
          %a{ href: ('#')*offset + "password" + '#' + rand(0..43254735465623).to_s + '#' + @song.filename.file.basename + '#' + @song.album.name + '#' + @song.album.artist.name + '#' + ".mp3", id: @song.id}
            - if @songs.last.discnum && @songs.last.discnum > 1                 
              - if @song.track
                = format('%02d', @song.discnum).to_s + '-' + format('%02d', @song.track).to_s + ' ' + @song.name
              - elsif @song.name
                = '00' + ' ' + @song.name
            - else
              - if @song.track
                = format('%02d', @song.track).to_s + ' ' + @song.name
              - elsif @song.name
                = '00' + ' ' + @song.name
    - unless @song.review.nil? || @song.review.empty?
      %h4
        =t(:song_review)      
      %p.margin-top-05
        .song-video
          = @song.review
    %h4
      =t(:song_video_title)
    %p.margin-top-05
      .song-video
        - if @song.video == nil || @song.video == ''
          = t(:video_not_available)
        - else
          %iframe{:allowscriptaccess => "always", :allowFullScreen => "true", :frameborder => "0", :height => "430", :src => "http://www.youtube.com/embed/#{@video_id}", :title => "YouTube video player", :width => "640"}
    .comment_block.clear_both
      %h4
        = t(:comments)
      - if current_user
        .new-comment
          = render partial: "comments/form", locals: { commentable: @commentable }
      - else
        %i
          =t(:you_must_sign_in_to_comment)
      .js-comments
        = render partial: 'comments/comment', collection: @comments
    
  .col-md-4
    %h4
      =t(:song_lyrics)
    %p.margin-top-05
      - if @song.lyrics.nil? || @song.lyrics.empty?
        = t(:lyrics_not_available)
      - else
        = @song.lyrics.gsub(/(?:\n\r?|\r\n?)/, "<br>").html_safe 


= render partial: 'sponsors/sponsorbanner'

%script{:type=>"text/javascript"}

  var locale = "#{I18n.locale}";
  var album_name = "#{@album.name}"

  function sound_offset(){
  $.ajax({data: { album_name: album_name }, type: 'get', url: "/" + locale + "/sound_offset",
  success: function(r) { 
  smglch_offset = parseInt(r.split('#')[0]);
  smglch_hash1 = r.split('#')[1];
  smglch_hash2 = r.split('#')[2];
  smglch_hash3 = r.split('#')[3];
  }});
  }

  sound_offset();

  $(".add_to_playlist").click(function() {

  var song_id = $(this).attr('id');

  // Ajax call add to playlist with song_id
  if( $('#'+song_id).hasClass("clicked") ) {        
  $.ajax({data: { song_id: song_id }, type: 'post', url: "/" + locale + "/remove_from_playlist", success: function() { $('#'+song_id).removeClass( "clicked btn-danger glyphicon-minus-sign" ).addClass("btn-success glyphicon-plus-sign"); } });
  } else {
  $.ajax({data: { song_id: song_id }, type: 'post', url: "/" + locale + "/add_to_playlist", success: function() { $('#'+song_id).addClass( "clicked btn-danger glyphicon-minus-sign").removeClass("btn-success glyphicon-plus-sign"); } });
  }

  });

  // Info for Stats

  function get_userinfo(){
  $.ajax( { 
  url: '//geoip.nekudo.com/api/', 
  type: 'GET', 
  dataType: 'jsonp',
  success: function(location) {
  stats_ip_address = location.ip;
  stats_country = location.country.name;
  stats_city = location.city;
  }
  });
  user_agent = navigator.userAgent;
  song_id = "#{@song.id}"
  }
  
  get_userinfo();

  // Playing Stats

  $(document).on("justPlayed", function() {

  setTimeout(function(){
  $.ajax({data: { song_played_id: song_played_id, ip_address: stats_ip_address, city: stats_city, country: stats_country, platform: user_agent }, type: 'post', url: "/" + locale + "/add_to_song_stats" });
  },8000);

  });

  // Viewing Stats

  function viewstat(){
  $.ajax({data: { song_id: song_id, ip_address: stats_ip_address, city: stats_city, country: stats_country, platform: user_agent }, type: 'post', url: "/" + locale + "/add_to_song_views" });
  }

  setTimeout(viewstat,8000);
